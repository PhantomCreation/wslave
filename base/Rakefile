require 'fileutils'
require 'yaml'

@opts = YAML.load_file('config/definitions.yml')

desc 'Print simple instructions.'
task :default do
  puts 'Please call rake with a taks name, such as "db:dev", or list tasks with "rake -T".'
end

namespace :db do
  namespace :dev do
    desc 'Backup development container database to db/dev (container must be running)'
    task :backup do
      WSlaveDatabase.new.development_backup
    end

    desc 'Set the development container database image to the active image'
    task :activate do
      WSlaveDatabase.new.development_activate
    end
  end

  desc 'Backup and activate the development container database (container must be running)'
  task :dev do
    Rake::Task['db:dev:backup'].invoke
    Rake::Task['db:dev:activate'].invoke
  end

  namespace :staging do
    desc 'Set the staging database backup to the active database'
    task :activate do
      rm_dbfile('active')
      FileUtils.cp('db/staging/wordpress.sql', 'db/active/wordpress.sql')
      _replace_active_urls
    end
  end

  namespace :production do
    desc 'Set the production database backup to the active database'
    task :activate do
      rm_dbfile('active')
      FileUtils.cp('db/production/wordpress.sql', 'db/active/wordpress.sql')
      _replace_active_urls
    end
  end

  # Converts staging and production URL entries in DB backup with localhost:8000
  def _replace_active_urls
    puts 'Replacing Production and Staging URLs for local development/re-deployment...'
    db_data = File.read('db/active/wordpress.sql')

    db_data = db_data.gsub(/#{@opts['deployer']['fqdn']['staging']}/, 'localhost:8000') if @opts['deployer']['fqdn']['staging'] != ''
    db_data = db_data.gsub(/#{@opts['deployer']['fqdn']['production']}/, 'localhost:8000') if @opts['deployer']['fqdn']['production'] != ''

    File.open('db/active/wordpress.sql', 'w') { |file| file.puts db_data }
  end
end

namespace :staging do
  desc 'Open an SSH session to the staging host in the staging directory'
  task :ssh do
    exec("ssh #{@opts['deployer']['user']}@#{@opts['deployer']['host']['staging']} -t \"cd #{@opts['deployer']['root']}/#{@opts['deployer']['fqdn']['staging']}; exec $SHELL -l\"")
  end
end

namespace :production do
  desc 'Open an SSH session to the staging host in the production directory'
  task :ssh do
    exec("ssh #{@opts['deployer']['user']}@#{@opts['deployer']['host']['production']} -t \"cd #{@opts['deployer']['root']}/#{@opts['deployer']['fqdn']['production']}; exec $SHELL -l\"")
  end
end
